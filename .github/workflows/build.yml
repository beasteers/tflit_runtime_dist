#                       2.0 | 2.1 | 2.2 | 2.3 | 2.4(master)
# version suffix:              x     x     x     x
# /tmp/tflite_pip:       x     x
# {SCRIPT_DIR}/gen/...:              x     x     x

# version number from: tensorflow/tensorflow/tools/pip_package/setup.py : _VERSION


on: push
name: Compile
jobs:
  # build:
  #   name: Build
  #   runs-on: ${{ matrix.os }}
  #   strategy:
  #     matrix:
  #       # branch: [master]
  #       # python: [3.7]
  #       # os: [ubuntu-latest]
  #       branch: [r2.1, r2.2, r2.3]  # r2.1,
  #       python: [3.5, 3.6, 3.7, 3.8] #
  #       os: [macos-latest, ubuntu-latest]  #
  #       version_suffix: [.dev801] #[''] #
  #       package_name: [tflite-runtime-alt]
  #
  #   steps:
  #
  #     # Setup
  #
  #     - uses: actions/checkout@master
  #     - uses: actions/setup-python@v1
  #       with:
  #         python-version: ${{ matrix.python }}
  #
  #     - name: Clone
  #       run: . .ci/build_steps.sh && clone_tensorflow
  #       env:
  #         TF_BRANCH: ${{ matrix.python }}
  #
  #     - name: Installs
  #       run: . .ci/build_steps.sh && install_tflite_build_deps
  #
  #     - name: Build
  #       run: . .ci/build_steps.sh && build_tflite_runtime
  #       env:
  #         VERSION_SUFFIX: ${{ matrix.version_suffix }}
  #         PKG_NAME: ${{ matrix.package_name }}
  #
  #     - name: copy over wheels
  #       run: . .ci/build_steps.sh && gather_tflite_wheels
  #
  #     # # push github
  #     # - name: commit files
  #     #   run: . .ci/build_steps.sh && push_wheels_to_github
  #     #   env:
  #     #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  #     #     PY_VERSION: ${{ matrix.python }}
  #     #     OS_NAME: ${{ matrix.os }}
  #
  #     - name: pypi upload
  #       run: . .ci/build_steps.sh && upload_to_testpypi
  #       env:
  #         TWINE_USERNAME: ${{ secrets.pypi_user }}
  #         TWINE_PASSWORD: ${{ secrets.pypi_password }}
  #
  #     # - name: Tests
  #     #   run: . .ci/build_steps.sh && test_tflite_runtime
  #     #   env:
  #     #     TFRUNTIME_VERSION:   # XXX: how to get version???


  build_arm:
    name: Build ARM 32/64
    runs-on: ubuntu-latest
    strategy:
      matrix:  # how to DRY?
        branch: [master]
        python: [3.7]
        # branch: [r2.1, r2.2, r2.3]  # r2.1,
        # python: [3.5, 3.6, 3.7, 3.8] #
        arch: [rpi, aarch64] #, arm64v8
        version_suffix: [.dev800] #[''] #
        package_name: [tflite-runtime-alt]

    steps:
      - uses: actions/checkout@v1
      - name: Make ${{ matrix.arch }} wheel
        run: . .ci/build_steps.sh && run_full_tflite_build
        env:
          TENSORFLOW_TARGET: ${{ matrix.arch }}
          VERSION_SUFFIX: ${{ matrix.version_suffix }}
          PKG_NAME: ${{ matrix.package_name }}
          TWINE_USERNAME: ${{ secrets.pypi_user }}
          TWINE_PASSWORD: ${{ secrets.pypi_password }}
